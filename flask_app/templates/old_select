
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Vehicle for {{ year }} {{ make.capitalize() }} {{ model.capitalize() }}</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.css">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            display: block;
            justify-content: center;
            align-items: center;
            font-family: Arial, sans-serif;
        }

        body {
            margin: 0;
            padding: 0;
            padding-top: 20px;
        }

        .container {
            max-width: 1200px;
            width: 100%;
            margin: 0 auto;
            text-align: center;
            padding: 20px;
            box-sizing: border-box;
        }

        input[type="text"] {
            width: 80%;
            padding: 10px;
            margin: 5px 0;
        }

        button {
            padding: 10px 20px;
            margin: 5px;
        }

        .filter-container {
            text-align: left;
            margin: 20px 0;
        }
    </style>
</head>


<body>
    <h1>Select a Vehicle for {{ year }} {{ make.capitalize() }} {{ model.capitalize() }}</h1>
    <form method="POST" action="{{ url_for('process_selection') }}">
        <table>
            <tr>
                <th>Series</th>
                <th>Trim</th>
                <th>DriveType</th>
                <th>DisplacementCC</th>
                <th>FuelTypePrimary</th>
                <th>Select</th>
            </tr>
            {% for index, row in matches.iterrows() %}
            <tr>
                <td>{{ row.series }}</td>
                <td>{{ row.trim }}</td>
                <td>{{ row.drivetype }}</td>
                <td>{{ row.displacementcc }}</td>
                <td>{{row.FuelTypePrimary}}</td>
                <td><button type="submit" name="selected_idx" value="{{ index }}">Select</button></td>
            </tr>
            {% endfor %}
        </table>
    </form>
        <!-- Filter for State -->
        <div class="filter-container">
            <label for="stateFilter">Filter by State:</label>
            <select id="stateFilter">
                <option value="">All States</option>
                <option value="ak">Alaska</option>
                <option value="al">Alabama</option>
                <option value="ar">Arkansas</option>
                <option value="az">Arizona</option>
                <option value="ca">California</option>
                <option value="co">Colorado</option>
                <option value="ct">Connecticut</option>
                <option value="dc">District of Columbia</option>
                <option value="de">Delaware</option>
                <option value="fl">Florida</option>
                <option value="ga">Georgia</option>
                <option value="hi">Hawaii</option>
                <option value="ia">Iowa</option>
                <option value="id">Idaho</option>
                <option value="il">Illinois</option>
                <option value="in">Indiana</option>
                <option value="ks">Kansas</option>
                <option value="ky">Kentucky</option>
                <option value="la">Louisiana</option>
                <option value="ma">Massachusetts</option>
                <option value="md">Maryland</option>
                <option value="me">Maine</option>
                <option value="mi">Michigan</option>
                <option value="mn">Minnesota</option>
                <option value="mo">Missouri</option>
                <option value="ms">Mississippi</option>
                <option value="mt">Montana</option>
                <option value="nc">North Carolina</option>
                <option value="nd">North Dakota</option>
                <option value="ne">Nebraska</option>
                <option value="nh">New Hampshire</option>
                <option value="nj">New Jersey</option>
                <option value="nm">New Mexico</option>
                <option value="nv">Nevada</option>
                <option value="ny">New York</option>
                <option value="oh">Ohio</option>
                <option value="ok">Oklahoma</option>
                <option value="or">Oregon</option>
                <option value="pa">Pennsylvania</option>
                <option value="ri">Rhode Island</option>
                <option value="sc">South Carolina</option>
                <option value="sd">South Dakota</option>
                <option value="tn">Tennessee</option>
                <option value="tx">Texas</option>
                <option value="ut">Utah</option>
                <option value="va">Virginia</option>
                <option value="vt">Vermont</option>
                <option value="wa">Washington</option>
                <option value="wi">Wisconsin</option>
                <option value="wv">West Virginia</option>
                <option value="wy">Wyoming</option>
            </select>
        </div>

        <script>
            $(document).ready(function() {
    // Retrieve the previous state of the DataTable from sessionStorage, if available
    var savedState = sessionStorage.getItem('tableState');
    var table = $('#dynamicTable').DataTable({
        ajax: {
            url: '/api/data',
            dataSrc: ''
        },
        columns: [
            { 
                data: 'link',
                render: function(data) {
                    return `<a href="${data}" target="_blank">View Listing</a>`;
                }
            },
            { data: 'posting_date' },
            { data: 'state' },
            { data: 'odometer' },
            { data: 'modelyear' },
            { data: 'make' },
            { data: 'model' },
            { 
                data: 'price', 
                render: function(data) { 
                    return '$' + data.toLocaleString(); 
                }
            },
            { 
                data: 'predicted_price', 
                render: function(data) { 
                    return '$' + data.toLocaleString(); 
                },
                title: 'Value' // Renamed column
            },
            { 
                data: 'residual', 
                render: function(data) { 
                    return '$' + data.toLocaleString(); 
                },
                title: 'Price Below Value' // Renamed column
            },
            { 
                data: 'residual_percentage', 
                render: function(data) { 
                    return data.toFixed(2) + '%'; 
                },
                title: 'Price Below Value %' // Renamed column
            },
            { data: 'bodyclass' },
            { data: 'enginecylinders' },
            { data: 'drivetype' },
            { data: 'series' },
            { data: 'trim' }
        ],
        paging: true,
        searching: true,
        ordering: true,
        scrollX: true,
        scrollY: '60vh',
        scrollCollapse: true,
        autoWidth: false,
        columnDefs: [
            { orderable: false, targets: [0] } // Disable ordering on the "link" column
        ],
        // Apply the saved state if available
        stateSave: true,
        stateLoadCallback: function(settings) {
            if (savedState) {
                var state = JSON.parse(savedState);
                settings.oFeatures.bStateSave = true;
                settings.oFeatures.bAutoWidth = state.oFeatures.bAutoWidth;
                settings.oFeatures.bPaginate = state.oFeatures.bPaginate;
                settings.oFeatures.bFilter = state.oFeatures.bFilter;
                settings.oFeatures.bInfo = state.oFeatures.bInfo;
                settings.aaSorting = state.aaSorting;
            }
        }
    });

    // Save the state of the table to sessionStorage on every change
    table.on('stateSave', function(e, settings) {
        sessionStorage.setItem('tableState', JSON.stringify(settings));
    });

    // Function to apply gradient based on residual percentage
    function applyResidualPercentageGradient() {
        $('#dynamicTable tbody tr').each(function() {
            var residualPercentageText = $(this).find('td:nth-child(10)').text(); // Assuming residual_percentage is in the 10th column
            var residualPercentage = parseFloat(residualPercentageText.replace(/[^\d.-]/g, '')); // Convert to number

            var row = $(this);

            // Reset any previous background color applied by CSS (e.g., alternating row colors)
            row.css('background-color', ''); // Remove existing background colors

            // Check if residualPercentage is a valid number
            if (!isNaN(residualPercentage)) {
                // Apply green gradient if residualPercentage is greater than 2%
                if (residualPercentage > 2) { 
                    var greenIntensity = Math.min(255, residualPercentage * 10); // Gradually increase intensity as percentage increases
                    greenIntensity = greenIntensity > 255 ? 255 : greenIntensity; // Limit intensity to 255
                    row.css('background-color', `rgba(0, ${greenIntensity}, 0, 0.2)`); // Apply green background
                } 
                // Apply red gradient if residualPercentage is less than -2%
                else if (residualPercentage < -2) {
                    var redIntensity = Math.min(255, Math.abs(residualPercentage) * 10); // Gradually increase intensity as percentage decreases
                    redIntensity = redIntensity > 255 ? 255 : redIntensity; // Limit intensity to 255
                    row.css('background-color', `rgba(${redIntensity}, 0, 0, 0.2)`); // Apply red background
                } 
                // Apply gray tint if residualPercentage is between -2% and 2%
                else {
                    row.css('background-color', 'rgba(200, 200, 200, 0.2)'); // Light gray background for neutral values
                }
            }
        });
    }

    // Reapply gradient after the table is drawn or redrawn
    table.on('draw', function() {
        applyResidualPercentageGradient();
    });

    // Initial gradient application
    applyResidualPercentageGradient();

    // State filter logic
    $('#stateFilter').on('change', function() {
        var selectedState = $(this).val();
        if (selectedState) {
            table.column(2).search('^' + selectedState + '$', true, false).draw();  // Apply filter on the "state" column (index 2)
        } else {
            table.column(2).search('').draw(); // Clear search if no state is selected
        }
    });

    // Tooltip for specific columns
    $('#dynamicTable tbody').on('mouseenter', 'td:nth-child(5), td:nth-child(6), td:nth-child(7)', function() {
        $(this).css('cursor', 'pointer');

        // Create a static tooltip
        var tooltip = $('<div class="tooltip"></div>')
            .text('Search Vehicle')
            .css({
                position: 'absolute',
                top: $(this).offset().top + $(this).outerHeight() + 5,
                left: $(this).offset().left,
                background: 'rgba(0, 0, 0, 0.7)',
                color: '#fff',
                padding: '5px',
                borderRadius: '4px',
                display: 'none'
            })
            .appendTo('body')
            .fadeIn(200);

        $(this).on('mouseleave', function() {
            tooltip.fadeOut(200, function() {
                $(this).remove();
            });
        });
    });

    // Row click logic for specific columns
    $('#dynamicTable tbody').on('click', 'td:nth-child(5), td:nth-child(6), td:nth-child(7)', function() {
        var row = $(this).closest('tr');
        var data = table.row(row).data();
        if (data) {
            var modelYearString = parseInt(data.modelyear, 10).toString();
            var makeModelYear = `${data.make} ${data.model} ${modelYearString}`;
            window.location.href = `/search_make_model?make_model_year=${encodeURIComponent(makeModelYear)}`;
        }
    });
});

        </script>
<div style="overflow-x: auto; overflow-y: auto; max-height: 90vh;">
    <table id="dynamicTable" class="display" style="width:100%">
        <thead>
            <tr>
                <th>Link</th>
                <th>Posting Date</th>
                <th>State</th>
                <th>Odometer</th>
                <th>Model Year</th>
                <th>Make</th>
                <th>Model</th>
                <th>Price</th>
                <th>Value</th>
                <th>Price Below Value</th>
                <th>Price Below Value %</th>
                <th>Body Class</th>
                <th>Engine Cylinders</th>
                <th>Drive Type</th>
                <th>Series</th>
                <th>Trim</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
</body>
</html>